resource SmokersProb()
const SMOKERS : int := 6 # number of smokers

const TOBACCO : int := 1
const PAPER : int   := 2
const MATCHES : int := 3

# One request channel for each type
op request_channel(int; int)

# One reply channel for each smoker
op reply_channel[SMOKERS]()

	process Agent
		write("Started Agent")
		var items_on_table[3] : int
		
		do true -> 
			# Clear table
			items_on_table[TOBACCO] := 0
			items_on_table[PAPER]   := 0
			items_on_table[MATCHES] := 0

			# Wait for requests
			var smoker_id : int
			var smoker_type : int
			receive request_channel(smoker_type, smoker_id)

			# Put needed items on table
			var first_item : int := (smoker_type % 3) + 1
			write("Put item ", first_item, " on table.")
			items_on_table[first_item] := 1
			var second_item : int := (first_item % 3) + 1
			write("Put item ", second_item, " on table.")
			items_on_table[second_item] := 1
			
			# Send reply to smoker
			write("Giving items to ", smoker_id)
			send reply_channel[smoker_id]()
		od
	end

	process Smoker(i := 1 to SMOKERS)
		write("Starting Smoker ",i)
		var my_item : int := ((i - 1) % 3) + 1
		do true -> 
			# request ingredients from agent
			write(i, " requesting items")
			send request_channel(my_item, i)

			# wait for reply from agent
			receive reply_channel[i]()
				
			# smoke for a while
			write("Smoker ",i," started smoking.")
			nap(int(random(1000, 3000)))
		od
	end
	
end SmokersProb