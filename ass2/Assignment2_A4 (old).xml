<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>//Insert declarations of global clocks, variables, constants and channels.

const int SMOKERS = 3;	// Const identifier

const int TOBACCO = 0;		// Const identifier
const int PAPER   = 1;		// Const identifier
const int MATCHES = 2;		// Const identifier

const int n = 4; 		//number of processes, used here to determine the minmum length of a message buffer (hence, minimizing state space)
const int m = 4;		//Replace 1 with the number of channels
const int arg = 1;		//Replaxe 1 with the maximum number of arguments you send on any channel

int msg[arg];			//Emulating the message sent on channel

urgent chan send[m];		// One request channel for each resource type
urgent chan receive[m];		// One reply channel for each smoker
urgent chan Go;

</declaration><template><name x="5" y="5">Agent</name><parameter>const int id</parameter><declaration>
int myInMsg[arg];		// Recieved messages
int myOutMsg[arg];		// Outgoing messages

int smoker_type;		// Type of smoker (holds item wth same ID)
int smoker_id;			// ID of smoker

int first_item = 1;		// ID of second item
int second_item;		// ID of second item

int items_on_table[3];		// Array of tabled items
</declaration><location id="id0" x="-232" y="56"></location><location id="id1" x="-232" y="136"></location><location id="id2" x="-232" y="-136"><name x="-280" y="-168">Send</name></location><location id="id3" x="160" y="-136"></location><location id="id4" x="160" y="32"><name x="88" y="8">Receive</name></location><location id="id5" x="160" y="128"></location><location id="id6" x="160" y="224"></location><location id="id7" x="160" y="320"><name x="40" y="288">GetSmokerType</name></location><location id="id8" x="160" y="408"><name x="24" y="384">SecondItemPlaced</name></location><location id="id9" x="-232" y="504"></location><location id="id10" x="-232" y="408"><name x="-352" y="384">FirstItemPlaced</name></location><location id="id11" x="-232" y="320"></location><location id="id12" x="-232" y="216"><name x="-320" y="184">PlaceItems</name></location><location id="id13" x="-232" y="-32"><name x="-320" y="-64">ClearTable</name></location><location id="id14" x="-424" y="-32"><name x="-480" y="-64">Initial</name></location><init ref="id14"/><transition><source ref="id0"/><target ref="id1"/><label kind="synchronisation" x="-200" y="113">Go?</label><label kind="assignment" x="-200" y="128">items_on_table[PAPER] = 0</label></transition><transition><source ref="id1"/><target ref="id12"/><label kind="synchronisation" x="-200" y="176">Go?</label><label kind="assignment" x="-200" y="191">items_on_table[MATCHES] = 0</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="synchronisation" x="-96" y="-184">Go?</label><label kind="assignment" x="-96" y="-168">smoker_id = myInMsg[0]</label></transition><transition><source ref="id2"/><target ref="id13"/><label kind="synchronisation" x="-216" y="-96">send[smoker_id + 3]!</label></transition><transition><source ref="id4"/><target ref="id3"/><label kind="synchronisation" x="184" y="-39">receive[smoker_type]?</label><label kind="assignment" x="184" y="-24">myInMsg = msg</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="184" y="64">Go?</label><label kind="assignment" x="184" y="80">smoker_type -= items_on_table[MATCHES] * MATCHES</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="184" y="160">Go?</label><label kind="assignment" x="184" y="175">smoker_type -= items_on_table[PAPER] * PAPER</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="184" y="257">Go?</label><label kind="assignment" x="184" y="272">smoker_type -= items_on_table[TOBACCO] * TOBACCO</label></transition><transition><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="184" y="345">Go?</label><label kind="assignment" x="184" y="360">smoker_type = PAPER + TOBACCO + MATCHES</label></transition><transition><source ref="id9"/><target ref="id8"/><label kind="synchronisation" x="-152" y="512">Go?</label><label kind="assignment" x="-152" y="528">++items_on_table[second_item]</label><nail x="160" y="504"/></transition><transition><source ref="id10"/><target ref="id9"/><label kind="synchronisation" x="-208" y="433">Go?</label><label kind="assignment" x="-208" y="448">second_item = (first_item + 1) % 3</label></transition><transition><source ref="id11"/><target ref="id10"/><label kind="synchronisation" x="-208" y="344">Go?</label><label kind="assignment" x="-208" y="359">++items_on_table[first_item]</label></transition><transition><source ref="id12"/><target ref="id11"/><label kind="synchronisation" x="-208" y="256">Go?</label><label kind="assignment" x="-208" y="271">first_item = (first_item + 1) % 3</label></transition><transition><source ref="id13"/><target ref="id0"/><label kind="synchronisation" x="-200" y="48">Go?</label><label kind="assignment" x="-200" y="64">items_on_table[TOBACCO] = 0</label></transition><transition><source ref="id14"/><target ref="id13"/><label kind="synchronisation" x="-344" y="-24">Go?</label></transition></template><template><name x="5" y="5">Smoker</name><parameter>const int id</parameter><declaration>
int myInMsg[arg];		// Recieved messages
int myOutMsg[arg];		// Outgoing messages

int my_item = id % 3;</declaration><location id="id15" x="-232" y="-176"><name x="-296" y="-208">Smoking</name></location><location id="id16" x="-72" y="-120"><name x="-56" y="-152">Receive</name></location><location id="id17" x="-72" y="-232"><name x="-56" y="-264">Send</name></location><location id="id18" x="-72" y="-344"><name x="-128" y="-376">Initial</name></location><init ref="id18"/><transition><source ref="id15"/><target ref="id17"/><label kind="synchronisation" x="-224" y="-224">Go?</label><nail x="-232" y="-232"/></transition><transition><source ref="id16"/><target ref="id15"/><label kind="synchronisation" x="-200" y="-144">receive[id + 3]?</label><nail x="-232" y="-120"/></transition><transition><source ref="id17"/><target ref="id16"/><label kind="synchronisation" x="-64" y="-200">send[my_item]!</label><label kind="assignment" x="-64" y="-184">msg[0] = id</label></transition><transition><source ref="id18"/><target ref="id17"/><label kind="synchronisation" x="-112" y="-304">Go?</label></transition></template><template><name x="5" y="5">Hurry</name><location id="id19" x="312" y="208"></location><init ref="id19"/><transition><source ref="id19"/><target ref="id19"/><label kind="synchronisation" x="376" y="200">Go!</label><nail x="368" y="184"/><nail x="368" y="240"/></transition></template><template><name x="5" y="5">Channel</name><parameter>const int ChId</parameter><declaration>

int buff[n][arg];
int count = 0;
int tmp = 0;</declaration><location id="id20" x="472" y="192"><committed/></location><location id="id21" x="360" y="256"><committed/></location><location id="id22" x="256" y="184"></location><init ref="id22"/><transition><source ref="id21"/><target ref="id22"/><label kind="guard" x="272" y="200">tmp==count</label><label kind="assignment" x="272" y="216">tmp=0</label></transition><transition><source ref="id20"/><target ref="id21"/><label kind="assignment" x="392" y="120">buff[tmp] = buff[tmp+1],
tmp++</label><nail x="360" y="192"/></transition><transition><source ref="id21"/><target ref="id20"/><label kind="guard" x="400" y="232">tmp&lt;count</label><nail x="472" y="256"/></transition><transition><source ref="id22"/><target ref="id22"/><label kind="synchronisation" x="208" y="56">send[ChId]?</label><label kind="assignment" x="208" y="72">buff[count] = msg,
count++</label><nail x="216" y="112"/><nail x="296" y="112"/></transition><transition><source ref="id22"/><target ref="id21"/><label kind="guard" x="216" y="256">count&gt;0</label><label kind="synchronisation" x="216" y="272">receive[ChId]!</label><label kind="assignment" x="216" y="288">msg = buff[0],
count--</label><nail x="256" y="256"/><nail x="296" y="256"/></transition></template><system>//Insert process assignments to get more instances of a template.
A = Agent ( 0 );
S0 = Smoker ( 0 );
S1 = Smoker ( 1 );
S2 = Smoker ( 2 );			
S3 = Smoker ( 3 );			
S4 = Smoker ( 4 );			
S5 = Smoker ( 5 );			
H = Hurry( );

// Channels cannot be created dynamically. Add or remove channels when changing the number of smokers.
agent_request0 = Channel( 0 );
agent_request1 = Channel( 1 );
agent_request2 = Channel( 2 );

smoker_reply0  = Channel( 3 );
smoker_reply1  = Channel( 4 );
smoker_reply2  = Channel( 5 );
smoker_reply3  = Channel( 6 );
smoker_reply4  = Channel( 7 );
smoker_reply5  = Channel( 8 );

// System definitions, add templates when necessary
system A,S0,S1,S2,S3,S4,S5,H,agent_request0,agent_request1,agent_request2,smoker_reply0,smoker_reply1,smoker_reply2,smoker_reply3,smoker_reply4,smoker_reply5;</system></nta>