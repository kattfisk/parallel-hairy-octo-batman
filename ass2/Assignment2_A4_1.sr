resource SmokersProblem()
	
	const SMOKERS : int := 3			# Number of smokers
	
	const TOBACCO : int := 1
	const PAPER   : int := 2
	const MATCHES : int := 3

	op broadcast_channel[3]()			# One channel per smoker type
	op request_channel()					# Smokers request items
	
	process Agent
		var items_on_table[3] : int
		
		write("Started Agent")
		do true ->	
			# Clear table
			items_on_table[TOBACCO] := 0
			items_on_table[PAPER]   := 0
			items_on_table[MATCHES] := 0
			
			# Randomly select two items
			var first_item := int(random(1,4))
			++items_on_table[first_item]
			write("Put item ", first_item," on table.") 
			var second_item := ((first_item + int(random(0,2))) mod 3) + 1
			++items_on_table[second_item]
			write("Put item ", second_item," on table.") 
			
			# Calculate the smoker type that is to pick up items
			var smoker_type := PAPER + TOBACCO + MATCHES
			smoker_type -:= items_on_table[PAPER] * PAPER
			smoker_type -:= items_on_table[TOBACCO] * TOBACCO
			smoker_type -:= items_on_table[MATCHES] * MATCHES
			
			# Inform relevant smoker of the available items
			send broadcast_channel[smoker_type]()
			
			# Wait for request from smoker
			receive request_channel()
		od
	end
	
	process Smoker(i := 1 to SMOKERS)
		# Randomize start order
		nap(int(random(10, 500)))
		write("Started Smoker ",i)
		do true ->
			# Wait for message that the needed components are available
			receive broadcast_channel[i]()
			# Pick up items
			send request_channel()
			# Smoke
			write("Smoker ",i," started smoking.")
			nap(int(random(1000, 2000)))
		od
	end

end SmokersProblem
